{"version":3,"sources":["components/Global/checkbox/checkboxSkeleton.tsx","components/Global/checkbox/rootCheckbox.tsx","components/Global/checkbox/checkbox.tsx","Test.tsx","redux/data/emailSectionList.ts","SVGs/inbox_black_24dp.svg","SVGs/star_black_24dp.svg","SVGs/watch_later_black_24dp.svg","SVGs/send_black_24dp.svg","SVGs/drafts_black_24dp.svg","redux/reducers/emailSectionListReducer.ts","redux/reducers/meetingSectionListReducer.ts","SVGs/videocam_black_24dp.svg","SVGs/keyboard_black_24dp.svg","redux/reducers/emailActiveSectionsReducer.ts","redux/data/initialHangoutsPersonList.ts","redux/reducers/hangoutsListReducer.ts","redux/index.ts","index.tsx"],"names":["CheckBoxSkeleton","props","styles","isChecked","border","backgroundColor","onClick","handleClick","className","style","RootCheckbox","useState","checked","setChecked","document","querySelectorAll","forEach","ele","click","CheckBox","isAlreadyChecked","Test","sections","title","src","code","href","emailSectionListReducer","meetingSectionListReducer","createActiveObj","toBeActivated","data","initialState","emailActiveSectionsReducer","state","action","type","personList","name","key","checkForAvailability","id","generateUniqueId","randomId","Math","round","random","removePerson","filter","person","hangoutsListReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e314770.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./css/checkbox.css\";\n\nexport interface CheckBoxSkeletonProps {\n\tisChecked: boolean;\n\thandleClick: Function;\n}\n\nconst CheckBoxSkeleton: React.FC<CheckBoxSkeletonProps> = (props) => {\n\tlet styles: React.CSSProperties = {};\n\n\tif (props.isChecked)\n\t\tstyles = { border: \"1rem solid #212121\", backgroundColor: \"#212121\" };\n\telse styles = {};\n\n\treturn (\n\t\t<div\n\t\t\tonClick={props.handleClick as any}\n\t\t\tclassName=\"global-checkbox\"\n\t\t\tstyle={styles}\n\t\t></div>\n\t);\n};\n\nexport default CheckBoxSkeleton;\n","import { useState } from \"react\";\nimport CheckBoxSkeleton from \"./checkboxSkeleton\";\n\nexport interface RootCheckboxProps {}\n\nconst RootCheckbox: React.FC<RootCheckboxProps> = (props) => {\n\tconst [checked, setChecked] = useState(false);\n\n\tconst rootClickHandler = () => {\n\t\tif (!checked) {\n\t\t\tdocument.querySelectorAll(\".global-checkbox\").forEach((ele: any) => {\n\t\t\t\tif (ele.style[\"background-color\"] != \"rgb(33, 33, 33)\") {\n\t\t\t\t\tele.click();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdocument.querySelectorAll(\".global-checkbox\").forEach((ele: any) => {\n\t\t\t\tif (ele.style[\"background-color\"] != \"rgb(255, 255, 255)\") ele.click();\n\t\t\t});\n\t\t}\n\n\t\tsetChecked(!checked);\n\t};\n\n\treturn (\n\t\t<CheckBoxSkeleton isChecked={checked} handleClick={rootClickHandler} />\n\t);\n};\n\nexport default RootCheckbox;\n","import { useState } from \"react\";\nimport CheckBoxSkeleton from \"./checkboxSkeleton\";\n\nexport interface CheckBoxProps {\n\tisAlreadyChecked: boolean;\n}\n\nconst CheckBox: React.FC<CheckBoxProps> = (props) => {\n\tconst [checked, setChecked] = useState(props.isAlreadyChecked);\n\n\tconst handleClick = () => {\n\t\tsetChecked(!checked);\n\t};\n\n\treturn <CheckBoxSkeleton isChecked={checked} handleClick={handleClick} />;\n};\n\nexport default CheckBox;\n","import React from \"react\";\n\nimport \"./test.css\";\nimport \"./globalStylevariables.css\";\n\nimport RootCheckbox from \"./components/Global/checkbox/rootCheckbox\";\nimport CheckBox from \"./components/Global/checkbox/checkbox\";\n\nexport interface TestProps {}\n\nconst Test: React.FC<TestProps> = () => {\n\treturn (\n\t\t<div className=\"test\">\n\t\t\t<RootCheckbox />\n\n\t\t\t<CheckBox isAlreadyChecked={true} />\n\t\t</div>\n\t);\n};\n\nexport default Test;\n","import inbox_logo from \"../../SVGs/inbox_black_24dp.svg\";\nimport star_logo from \"../../SVGs/star_black_24dp.svg\";\nimport snooze_logo from \"../../SVGs/watch_later_black_24dp.svg\";\nimport sent_logo from \"../../SVGs/send_black_24dp.svg\";\nimport draft_logo from \"../../SVGs/drafts_black_24dp.svg\";\n\nimport { sectionItem } from \"../../interface\";\n\nexport const sections: sectionItem[] = [\n\t{\n\t\ttitle: \"Inbox\",\n\t\tsrc: inbox_logo,\n\t\tcode: \"INBOX\",\n\t\thref: \"#\",\n\t},\n\t{\n\t\ttitle: \"Starred\",\n\t\tsrc: star_logo,\n\t\tcode: \"STARRED\",\n\t\thref: \"#\",\n\t},\n\t{\n\t\ttitle: \"Snoozed\",\n\t\tsrc: snooze_logo,\n\t\tcode: \"SNOOZED\",\n\t\thref: \"#\",\n\t},\n\t{\n\t\ttitle: \"Sent\",\n\t\tsrc: sent_logo,\n\t\tcode: \"SENT\",\n\t\thref: \"#\",\n\t},\n\t{\n\t\ttitle: \"Drafts\",\n\t\tsrc: draft_logo,\n\t\tcode: \"DRAFT\",\n\t\thref: \"#\",\n\t},\n];\n","export default __webpack_public_path__ + \"static/media/inbox_black_24dp.0731f5d2.svg\";","export default __webpack_public_path__ + \"static/media/star_black_24dp.ecf2636e.svg\";","export default __webpack_public_path__ + \"static/media/watch_later_black_24dp.efe720bf.svg\";","export default __webpack_public_path__ + \"static/media/send_black_24dp.0fe097c9.svg\";","export default __webpack_public_path__ + \"static/media/drafts_black_24dp.4669aec4.svg\";","import { sections } from \"../data/emailSectionList\";\n\nconst emailSectionListReducer = () => {\n\treturn sections;\n};\n\nexport default emailSectionListReducer;\n","import camera from \"../../SVGs/videocam_black_24dp.svg\";\nimport keyboard from \"../../SVGs/keyboard_black_24dp.svg\";\n\nimport { sectionItem } from \"../../interface\";\n\nconst sections: sectionItem[] = [\n\t{\n\t\ttitle: \"New Meeting \",\n\t\tsrc: camera,\n\t\tcode: \"CAMERA\",\n\t\thref: \"https://meet.google.com/\",\n\t},\n\t{\n\t\ttitle: \"Join a Meeting\",\n\t\tsrc: keyboard,\n\t\tcode: \"KEYBOARD\",\n\t\thref: \"https://meet.google.com/\",\n\t},\n];\n\nconst meetingSectionListReducer = () => sections;\n\nexport default meetingSectionListReducer;\n","export default __webpack_public_path__ + \"static/media/videocam_black_24dp.753a7ff0.svg\";","export default __webpack_public_path__ + \"static/media/keyboard_black_24dp.6750ff82.svg\";","import { sections } from \"../data/emailSectionList\";\n\nconst createActiveObj = (toBeActivated: string) => {\n\tlet data: any = {};\n\tfor (let ele of sections) {\n\t\tdata[ele.code] = ele.code === toBeActivated;\n\t}\n\treturn data;\n};\n\nconst initialState = () => createActiveObj(\"INBOX\");\n\nconst emailActiveSectionsReducer = (state = initialState(), action: any) => {\n\tswitch (action.type) {\n\t\tcase \"CHANGE_TO_ACTIVE\":\n\t\t\treturn createActiveObj(action.code);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default emailActiveSectionsReducer;\n","import { hangoutPerson } from \"../../interface\";\n\nlet personList: hangoutPerson[] = [\n\t{\n\t\tname: \"Sammy\",\n\t\tkey: 12726,\n\t},\n\t{\n\t\tname: \"Mary\",\n\t\tkey: 18219,\n\t},\n\t{\n\t\tname: \"Harry\",\n\t\tkey: 121812,\n\t},\n\t{\n\t\tname: \"Max\",\n\t\tkey: 128213,\n\t},\n\t{\n\t\tname: \"Mario\",\n\t\tkey: 712812,\n\t},\n\t{\n\t\tname: \"David\",\n\t\tkey: 281932,\n\t},\n\t{\n\t\tname: \"Lawson\",\n\t\tkey: 218378,\n\t},\n];\n\nexport default personList;\n","import { hangoutPerson } from \"../../interface\";\n\nimport personList from \"../data/initialHangoutsPersonList\";\n\nconst ID_VALUE_MAX: number = 1000000;\nconst ID_VALUE_MIN: number = 2437;\n\n// Generate a random id for a user\nconst generateRandomNumber = (): number =>\n\tMath.round(Math.random() * (ID_VALUE_MAX - ID_VALUE_MIN) + ID_VALUE_MIN);\n\n// * Checks if a generated random number is available\nconst checkForAvailability = (state: hangoutPerson[], id: number): boolean => {\n\tfor (const person of state) {\n\t\tif (person.key == id) return false;\n\t}\n\treturn true;\n};\n\n// * Unique Id generator\nconst generateUniqueId = (state: hangoutPerson[], action: any) => {\n\tlet randomId: number = 0;\n\n\twhile (true) {\n\t\trandomId = generateRandomNumber();\n\t\tif (checkForAvailability(state, randomId)) break;\n\t}\n\n\treturn [\n\t\t...state,\n\t\t{\n\t\t\tname: action.data.name,\n\t\t\tkey: randomId,\n\t\t},\n\t];\n};\n\n// * Removes a person from hangouts list\nconst removePerson = (state: hangoutPerson[], key: number) => {\n\treturn state.filter((person) => person.key !== key);\n};\n\nconst hangoutsListReducer = (state = personList, action: any) => {\n\tswitch (action.type) {\n\t\tcase \"ADD_PERSON\":\n\t\t\treturn generateUniqueId(state, action);\n\t\tcase \"REMOVE_PERSON\":\n\t\t\treturn removePerson(state, action.key);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default hangoutsListReducer;\n","import { createStore, combineReducers, compose } from \"redux\";\n\n// ! All Reducers\nimport emailSectionListReducer from \"./reducers/emailSectionListReducer\";\nimport meetingSectionListReducer from \"./reducers/meetingSectionListReducer\";\nimport emailActiveSectionsReducer from \"./reducers/emailActiveSectionsReducer\";\nimport hangoutsListReducer from \"./reducers/hangoutsListReducer\";\n\nconst rootReducer = combineReducers({\n\temailSectionListReducer,\n\tmeetingSectionListReducer,\n\temailActiveSectionsReducer,\n\thangoutsListReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducer, composeEnhancers());\n\nexport default store;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport Test from \"./Test\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t{/* <App /> */}\n\t\t<Test />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}